.container--l {
  max-width: $width--l;
  margin: 0 auto;
}

.container--m {
  max-width: $width--m;
  margin: 0 auto;
}

.container--s {
  max-width: $width--s;
  margin: 0 auto;
}

@mixin width($width) {
  width: ($width / $number-of-columns) * 100%;
}

@mixin offset-width($width) {
  margin-left: ($width / $number-of-columns) * 100%;
}

.row {
  display: flex;
  flex-wrap: wrap;
  padding-right: $gutter;
  padding-left: $gutter;
  box-sizing: border-box;

  &.align-top {
    align-items: flex-start;
  }

  &.align-bottom {
    align-items: flex-end;
  }

  &.align-center {
    align-items: center;
  }

  &.flush {
    padding: 0;

    & > [class^="col-"] {
      padding: 0;
    }
  }

  &.no-pad {
    padding: 0;
  }

  &.justify-around {
    justify-content: space-around;
  }

  &.justify-between {
    justify-content: space-between;
  }

  &.justify-center {
    justify-content: center;
  }

  &.justify-end {
    justify-content: flex-end;
  }

  &.direction-column {
    flex-direction: column;
  }

  &.no-wrap {
    flex-wrap: nowrap;
  }
}

// Base class
[class*="col-"] {
  width: 100%;
  padding: $gutter;
  box-sizing: border-box;

  &.width-auto {
    width: auto;
  }

  &.align-top {
    align-self: flex-start;
  }

  &.align-bottom {
    align-self: flex-end;
  }

  &.align-center {
    align-self: center;
  }

  > .row {
    padding: 0;
  }

  @for $i from 1 through $number-of-columns {
    &.order-#{$i} {
      order: $i;
    }
  }
}

// Generate classes based on grid variable
@for $i from 1 through $number-of-columns {
  .col-#{$i} {
    @include width($i);
  }

  .offset-#{$i} {
    @include offset-width($i);
  }
}

// mbl
@media screen and (min-width: $break--mbl) {
  @for $i from 1 through $number-of-columns {
    .col-#{$i}-mbl {
      @include width($i);
    }

    .offset-#{$i}-mbl {
      @include offset-width($i);
    }
  }
}

// tblt
@media screen and (min-width: $break--tblt) {
  @for $i from 1 through $number-of-columns {
    .col-#{$i}-tblt {
      @include width($i);
    }

    .offset-#{$i}-tblt {
      @include offset-width($i);
    }
  }
}

// dsktp
@media screen and (min-width: $break--dsktp) {
  @for $i from 1 through $number-of-columns {
    .col-#{$i}-dsktp {
      @include width($i);
    }

    // base offsets
    .offset-#{$i}-dsktp {
      @include offset-width($i);
    }
  }
}
